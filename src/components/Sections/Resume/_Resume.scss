@use "/src/styles/core" as *;

#resume {
  text-align: justify;

  ul {
    list-style: disc;
    padding-inline-start: 2rem;
    li {
      ul {
        list-style: circle;
      }
    }
  }

  @include all-headings {
    text-align: initial;
  }
  h3 {
    margin: 0.5rem 0;
  }
  .RoleGroup {
    .RoleTitle {
      flex: 1 1 auto;
    }
    .RoleDate {
      text-align: right !important;
      span {
        white-space: nowrap;
      }
    }

    &:not(:last-child) {
      margin-bottom: 1rem;
    }
    .RoleInfo {
      padding: 1rem 0rem;
    }
  }
}

// React-Select Dropdown
.CustomReactSelectContainer {
  .CustomReactSelect__control {
    @include media-colour-scheme(
      background-color,
      $white95 !important,
      $black80 !important
    );
    @include media-colour-scheme(
      box-shadow,
      0 0 0 1px $black60 !important,
      0 0 0 1px $white60 !important
    );
    @include media-colour-scheme(
      border-color,
      $black60 !important,
      $white60 !important
    );
    @include hover-behaviour {
      cursor: pointer;
    }
    // transition: none !important;

    // &:hover,
    // @include hover-behaviour
    &.CustomReactSelect__control--is-focused {
      @include media-colour-scheme(
        border-color,
        $white80 !important,
        $black80 !important
      );
    }
  }
  .CustomReactSelect__indicator {
    @include media-colour-scheme(
      color,
      $black80 !important,
      $white100 !important
    );
  }

  .CustomReactSelect__menu {
    // Lowers the index to show behind header
    z-index: 0;
    @include media-colour-scheme(
      background-color,
      $white95 !important,
      $black65 !important
    );
    @include media-colour-scheme(
      border,
      1px solid $black60 !important,
      1px solid $white60 !important
    );
  }

  .CustomReactSelect__option {
    @include prefers-colour-scheme(dark) {
      background-color: $black65 !important;
    }
    @include hover-behaviour {
      cursor: pointer;
    }

    &.CustomReactSelect__option--is-selected {
      @include prefers-colour-scheme(dark) {
        background-color: $white85 !important;
        color: $textColour !important;
      }
    }

    @include hover-behaviour {
      @include prefers-colour-scheme(dark) {
        background-color: $white100 !important;
        color: $textColour !important;
      }
    }
  }

  // Check if for dark mode only
  .CustomReactSelect__indicator-separator {
    @include prefers-colour-scheme(dark) {
      background-color: $black60 !important;
    }
  }

  // Only for dark mode
  .CustomReactSelect__placeholder,
  .CustomReactSelect__single-value {
    @include media-colour-scheme(
      color,
      $textColour !important,
      $white100 !important
    );
  }
}

.ResumeSwitch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;

  input {
    opacity: 0;
    width: 0;
    height: 0;
    &:checked + .Slider {
      background-color: #2196f3;
      &:before {
        transform: translateX(26px);
      }
    }

    &:focus + .Slider {
      box-shadow: 0 0 1px #2196f3;
    }
  }

  .Slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: $white80;
    @include vendor-prefixed(transition, $transitionShortMedium);
    @include prefers-colour-scheme(light) {
      border: 1px solid $white60;
    }

    &:before {
      position: absolute;
      content: "";
      height: 26px;
      width: 26px;
      left: 4px;
      bottom: 4px;
      background-color: $white100;
      @include vendor-prefixed(transition, $transitionShortMedium);
    }
    /* Rounded sliders */
    &.Rounded {
      border-radius: 34px;
      &:before {
        border-radius: 50%;
      }
    }
  }
}
